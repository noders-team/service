"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[2416],{2304:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>v,frontMatter:()=>o,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"testnet-networks/lava/install","title":"Installation","description":"# Installation","source":"@site/docs/testnet-networks/lava/install.mdx","sourceDirName":"testnet-networks/lava","slug":"/testnet-networks/lava/install","permalink":"/service/testnet-networks/lava/install","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"hide_table_of_contents":false,"title":"Installation","sidebar_position":2},"sidebar":"testnetSidebar","previous":{"title":"Lava","permalink":"/service/testnet-networks/lava"},"next":{"title":"Upgrade","permalink":"/service/testnet-networks/lava/upgrade"}}');var i=a(4848),l=a(8453);const o={hide_table_of_contents:!1,title:"Installation",sidebar_position:2},r="Installation",d={},t=[{value:"Chain ID: <code>lava-testnet-2</code> | Current Node Version: <code>v5.3.0</code>",id:"chain-id-lava-testnet-2--current-node-version-v530",level:6},{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Install GO",id:"install-go",level:2},{value:"Install with Cosmovisor",id:"install-with-cosmovisor",level:2},{value:"Download and build binaries",id:"download-and-build-binaries",level:3},{value:"Clone Lava repo and build lavad v5.3.0",id:"clone-lava-repo-and-build-lavad-v530",level:3},{value:"Build binaries",id:"build-binaries",level:3},{value:"Prepare binaries for Cosmovisor",id:"prepare-binaries-for-cosmovisor",level:3},{value:"Create symlinks",id:"create-symlinks",level:3},{value:"Download and install Cosmovisor",id:"download-and-install-cosmovisor",level:2},{value:"Run node",id:"run-node",level:2},{value:"Create service",id:"create-service",level:3},{value:"Install without Cosmovisor",id:"install-without-cosmovisor",level:2},{value:"Download and build binaries",id:"download-and-build-binaries-1",level:3},{value:"Clone Lava repo and build lavad v5.3.0",id:"clone-lava-repo-and-build-lavad-v530-1",level:3},{value:"Build binaries",id:"build-binaries-1",level:3},{value:"Run node",id:"run-node-1",level:2},{value:"Create service",id:"create-service-1",level:3},{value:"Enable service",id:"enable-service",level:3},{value:"Node configuration",id:"node-configuration",level:2},{value:"Set config",id:"set-config",level:3},{value:"Initialize the node",id:"initialize-the-node",level:3},{value:"Download genesis and addrbook",id:"download-genesis-and-addrbook",level:3},{value:"Add peers",id:"add-peers",level:3},{value:"Set minimum gas price",id:"set-minimum-gas-price",level:3},{value:"Set pruning",id:"set-pruning",level:3},{value:"Set custom ports",id:"set-custom-ports",level:3},{value:"Start node and check logs",id:"start-node-and-check-logs",level:3}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h6:"h6",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("div",{class:"h1-with-icon icon-lava",children:(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"installation",children:"Installation"})})}),"\n",(0,i.jsxs)(n.h6,{id:"chain-id-lava-testnet-2--current-node-version-v530",children:["Chain ID: ",(0,i.jsx)(n.code,{children:"lava-testnet-2"})," | Current Node Version: ",(0,i.jsx)(n.code,{children:"v5.3.0"})]}),"\n",(0,i.jsx)(n.h2,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"sudo apt -q update\nsudo apt -qy install curl git jq lz4 build-essential\nsudo apt -qy upgrade\n"})}),"\n",(0,i.jsx)(n.h2,{id:"install-go",children:"Install GO"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'ver="1.21.3" &&\nwget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" &&\nsudo rm -rf /usr/local/go &&\nsudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" &&\nrm "go$ver.linux-amd64.tar.gz" &&\necho "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile &&\nsource $HOME/.bash_profile &&\ngo version\n'})}),"\n",(0,i.jsx)(n.h2,{id:"install-with-cosmovisor",children:"Install with Cosmovisor"}),"\n",(0,i.jsx)(n.admonition,{title:"ADVANCED ROUTE",type:"note",children:(0,i.jsx)(n.p,{children:"Cosmosvisor is a process manager for Cosmos SDK application binaries that monitors the governance module for incoming chain upgrade proposals. If a proposal is approved, cosmosvisor can automatically download the new binary, stop the current one, switch to the new binary, and restart the node with the new binary."})}),"\n",(0,i.jsx)(n.h3,{id:"download-and-build-binaries",children:"Download and build binaries"}),"\n",(0,i.jsx)(n.h3,{id:"clone-lava-repo-and-build-lavad-v530",children:"Clone Lava repo and build lavad v5.3.0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"cd $HOME\ngit clone https://github.com/lavanet.git\ncd lavanet\ngit checkout v5.3.0\n"})}),"\n",(0,i.jsx)(n.h3,{id:"build-binaries",children:"Build binaries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"make install\n"})}),"\n",(0,i.jsx)(n.h3,{id:"prepare-binaries-for-cosmovisor",children:"Prepare binaries for Cosmovisor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"cd $HOME\nmkdir -p ~/.lava/cosmovisor/upgrades/v5.3.0/bin\nmv $HOME/go/bin/lavad ~/.lava/cosmovisor/upgrades/v5.3.0/bin/\n"})}),"\n",(0,i.jsx)(n.h3,{id:"create-symlinks",children:"Create symlinks"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"sudo ln -s ~/.lava/cosmovisor/genesis ~/.lava/cosmovisor/current -f\nsudo ln -s ~/.lava/cosmovisor/current/bin/lavad /usr/local/bin/lavad -f\n"})}),"\n",(0,i.jsx)(n.h2,{id:"download-and-install-cosmovisor",children:"Download and install Cosmovisor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@v1.5.0\n"})}),"\n",(0,i.jsx)(n.h2,{id:"run-node",children:"Run node"}),"\n",(0,i.jsx)(n.h3,{id:"create-service",children:"Create service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'sudo tee /etc/systemd/system/lavad.service > /dev/null << EOF\n[Unit]\nDescription=lava node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which cosmovisor) run start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\nEnvironment="DAEMON_HOME=~/.lava"\nEnvironment="DAEMON_NAME=lavad"\nEnvironment="UNSAFE_SKIP_BACKUP=true"\nEnvironment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:~/.lava/cosmovisor/current/bin"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,i.jsx)(n.h2,{id:"install-without-cosmovisor",children:"Install without Cosmovisor"}),"\n",(0,i.jsx)(n.h3,{id:"download-and-build-binaries-1",children:"Download and build binaries"}),"\n",(0,i.jsx)(n.h3,{id:"clone-lava-repo-and-build-lavad-v530-1",children:"Clone Lava repo and build lavad v5.3.0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"cd $HOME\ngit clone https://github.com/lavanet.git\ncd lavanet\ngit checkout v5.3.0\n"})}),"\n",(0,i.jsx)(n.h3,{id:"build-binaries-1",children:"Build binaries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"make install\n"})}),"\n",(0,i.jsx)(n.h2,{id:"run-node-1",children:"Run node"}),"\n",(0,i.jsx)(n.h3,{id:"create-service-1",children:"Create service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'sudo tee /etc/systemd/system/lavad.service > /dev/null << EOF\n[Unit]\nDescription=lava node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which lavad) start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\nEnvironment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,i.jsx)(n.h3,{id:"enable-service",children:"Enable service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"sudo systemctl daemon-reload\nsudo systemctl enable lavad\n"})}),"\n",(0,i.jsx)(n.h2,{id:"node-configuration",children:"Node configuration"}),"\n",(0,i.jsx)(n.h3,{id:"set-config",children:"Set config"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"lavad config chain-id lava-testnet-2\nlavad config keyring-backend os\nlavad config node tcp://localhost:26657\n"})}),"\n",(0,i.jsx)(n.h3,{id:"initialize-the-node",children:"Initialize the node"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"lavad init NAME_OF_YOUR_VALIDATOR --chain-id lava-testnet-2\n"})}),"\n",(0,i.jsx)(n.h3,{id:"download-genesis-and-addrbook",children:"Download genesis and addrbook"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"curl https://snapshots-t.noders.services/lava/genesis.json -o ~/.lava/config/genesis.json\ncurl https://snapshots-t.noders.services/lava/addrbook.json -o ~/.lava/config/addrbook.json\n"})}),"\n",(0,i.jsx)(n.h3,{id:"add-peers",children:"Add peers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \\"47a09710163c64a37b4b0454113ea5b6bb0b80b5@lava-t-rpc.noders.services:19956\\"/" ~/.lava/config/config.toml\n'})}),"\n",(0,i.jsx)(n.h3,{id:"set-minimum-gas-price",children:"Set minimum gas price"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'sed -i -e "s|^minimum-gas-prices *=.*|minimum-gas-prices = \\"0.001ulava\\"|" ~/.lava/config/app.toml\n'})}),"\n",(0,i.jsx)(n.h3,{id:"set-pruning",children:"Set pruning"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"sed -i \\\n  -e 's|^pruning *=.*|pruning = \"custom\"|' \\\n  -e 's|^pruning-keep-recent *=.*|pruning-keep-recent = \"100\"|' \\\n  -e 's|^pruning-keep-every *=.*|pruning-keep-every = \"0\"|' \\\n  -e 's|^pruning-interval *=.*|pruning-interval = \"19\"|' \\\n  ~/.lava/config/app.toml\n"})}),"\n",(0,i.jsx)(n.h3,{id:"set-custom-ports",children:"Set custom ports"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'echo "export lavad_PORT="SET_YOUR_PORT"" >> $HOME/.bash_profile\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'# Set custom ports in app.toml\nsed -i.bak -e "s%:1317%:${lavad_PORT}317%g" \\\n-e "s%:8080%:${lavad_PORT}080%g" \\\n-e "s%:9090%:${lavad_PORT}090%g" \\\n-e "s%:9091%:${lavad_PORT}091%g" \\\n-e "s%:8545%:${lavad_PORT}545%g" \\\n-e "s%:8546%:${lavad_PORT}546%g" \\\n-e "s%:6065%:${lavad_PORT}065%g" ~/.lava/config/app.toml\n\n# Set custom ports in config.toml file\nsed -i.bak -e "s%:26658%:${lavad_PORT}658%g" \\\n-e "s%:26657%:${lavad_PORT}657%g" \\\n-e "s%:6060%:${lavad_PORT}060%g" \\\n-e "s%:26656%:${lavad_PORT}656%g" \\\n-e "s%:26660%:${lavad_PORT}660%g" ~/.lava/config/config.toml\n'})}),"\n",(0,i.jsx)(n.h3,{id:"start-node-and-check-logs",children:"Start node and check logs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"sudo systemctl start lavad && sudo journalctl -u lavad -f --no-hostname -o cat\n"})})]})}function v(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>r});var s=a(6540);const i={},l=s.createContext(i);function o(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);