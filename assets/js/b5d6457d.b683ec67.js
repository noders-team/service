"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[9718],{1725:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"testnet-networks/template/snapshot","title":"Snapshot","description":"Chain ID [VERSION]","source":"@site/docs/testnet-networks/template/snapshot.mdx","sourceDirName":"testnet-networks/template","slug":"/testnet-networks/template/snapshot","permalink":"/service/testnet-networks/template/snapshot","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"hide_table_of_contents":false,"title":"Snapshot","sidebar_position":4}}');var o=t(4848),a=t(8453);const r={hide_table_of_contents:!1,title:"Snapshot",sidebar_position:4},i="Node Snapshot",d={},l=[{value:"Chain ID: <code>[CHAIN_ID]</code> | Current Node Version: <code>[VERSION]</code>",id:"chain-id-chain_id--current-node-version-version",level:6},{value:"Our [CHAIN_NAME] Snapshot Server Setup",id:"our-chain_name-snapshot-server-setup",level:2},{value:"Snapshot Information",id:"snapshot-information",level:3},{value:"How To Process [CHAIN_NAME] Snapshot",id:"how-to-process-chain_name-snapshot",level:2},{value:"Data",id:"data",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h6:"h6",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("div",{class:"h1-with-icon icon-[CHAIN_SYSTEM_NAME]",children:(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"node-snapshot",children:"Node Snapshot"})})}),"\n",(0,o.jsxs)(n.h6,{id:"chain-id-chain_id--current-node-version-version",children:["Chain ID: ",(0,o.jsx)(n.code,{children:"[CHAIN_ID]"})," | Current Node Version: ",(0,o.jsx)(n.code,{children:"[VERSION]"})]}),"\n",(0,o.jsx)(n.h2,{id:"our-chain_name-snapshot-server-setup",children:"Our [CHAIN_NAME] Snapshot Server Setup"}),"\n",(0,o.jsx)(n.h3,{id:"snapshot-information",children:"Snapshot Information"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Block Height"}),(0,o.jsx)(n.th,{children:"Size"}),(0,o.jsx)(n.th,{children:"Timestamp"}),(0,o.jsx)(n.th,{children:"Download Link"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"[SNAP_LATEST_BLOCK]"}),(0,o.jsx)(n.td,{children:"[SIZE]"}),(0,o.jsx)(n.td,{children:"[TIMESTAMP]"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"%5BSNAP_ARCHIVE_LINK%5D",children:"Download"})})]})})]}),"\n",(0,o.jsx)(n.p,{children:"We take one node snapshot every day. We then delete all the previous snapshots to free up the space on the file server."}),"\n",(0,o.jsx)(n.p,{children:"The snapshot is designed for node opeartors to run an efficient node on [CHAIN_NAME] chain. To make the snapshot as small as possible while still viable as a validator, we use the following setting to save on the disk space. It might be helpful for you to sync with our snapshot periodically because Tendermint chain storage grows over time regardless of the pruning. Since we periodically state-sync our snapshot nodes, you might notice that sometimes the size of our snapshot is surprisingly small."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="app.toml"',children:'# Prune Type\npruning = "custom"\n\n# Prune Strategy\npruning-keep-recent = "100"\npruning-keep-every = "0"\npruning-interval = "10"\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="config.toml"',children:'indexer = "null"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"how-to-process-chain_name-snapshot",children:"How To Process [CHAIN_NAME] Snapshot"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install snapd -y\nsudo snap install lz4\n"})}),"\n",(0,o.jsx)(n.p,{children:"Stop your node"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop [DAEMON_NAME]\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Reset your node. This will erase your node database. If you are already running validator, be sure you backed up your ",(0,o.jsx)(n.code,{children:"priv_validator_key.json"})," prior to running the command. The command does not wipe the file. However, you should have a backup of it already in a safe location."]}),"\n",(0,o.jsx)(n.admonition,{title:"WARNING",type:"warning",children:(0,o.jsxs)(n.p,{children:["If you use this snapshot on a validator node during a chain halt, make sure you back up ",(0,o.jsx)(n.code,{children:"priv_validator_state.json"})," and then replace it after the snapshot is extracted but before you start the node process. This is very important in order to avoid double-sign. When in doubt, reach out to the project team."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Back up priv_validator_state.json if needed\ncp [DAEMON_HOME]/data/priv_validator_state.json  [DAEMON_HOME]/priv_validator_state.json\n\ncd $HOME\nsudo rm -rf [DAEMON_HOME]/data\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Decompress the snapshot to your database location. You database location will be something to the effect of ",(0,o.jsx)(n.code,{children:"[DAEMON_HOME]"})," depending on your node implemention."]}),"\n",(0,o.jsx)(n.p,{children:"The above solution requires you to download the compressed file, uncompressed it and then delete the original file. This requires extra storage space on your server. You can run the following combo command to stream the snapshot into your database location. For advanced users only:"}),"\n",(0,o.jsx)(n.h3,{id:"data",children:"Data"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"[SNAP_ARCHIVE_DOWNLOAD_COMMAND]\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"WARNING",type:"warning",children:(0,o.jsxs)(n.p,{children:["If you run a validator node and the chain is in halt, it is time to replace the ",(0,o.jsx)(n.code,{children:"priv_validator_state.json"})," file that you have backed up."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Replace with the backed-up priv_validator_state.json\ncp [DAEMON_HOME]/priv_validator_state.json  [DAEMON_HOME]/data/priv_validator_state.json\n"})}),"\n",(0,o.jsx)(n.p,{children:"If everything is good, now restart your node\nMake sure that your node is running"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart [DAEMON_NAME]\nsudo journalctl -fu [DAEMON_NAME] --no-hostname -o cat\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"ADVANCED ROUTE",type:"info",children:(0,o.jsx)(n.p,{children:"We also have [CHAIN_NAME] state-sync service to help you bootstrap a node."})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(6540);const o={},a=s.createContext(o);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);