"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[5168],{871:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"testnet-networks/template/seeds-and-peers","title":"Seeds and peers","description":"# Seeds and Peers","source":"@site/docs/testnet-networks/template/seeds-and-peers.mdx","sourceDirName":"testnet-networks/template","slug":"/testnet-networks/template/seeds-and-peers","permalink":"/service/testnet-networks/template/seeds-and-peers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"hide_table_of_contents":false,"title":"Seeds and peers","sidebar_position":6}}');var o=n(4848),t=n(8453);const d={hide_table_of_contents:!1,title:"Seeds and peers",sidebar_position:6},i="Seeds and Peers",c={},a=[{value:"Chain ID: <code>[CHAIN_ID]</code> | Current Node Version: <code>[VERSION]</code>",id:"chain-id-chain_id--current-node-version-version",level:6},{value:"Our seed node",id:"our-seed-node",level:2},{value:"Our peer",id:"our-peer",level:2},{value:"Live Peers",id:"live-peers",level:2},{value:"Address book",id:"address-book",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h6:"h6",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("div",{class:"h1-with-icon icon-[CHAIN_SYSTEM_NAME]",children:(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"seeds-and-peers",children:"Seeds and Peers"})})}),"\n",(0,o.jsxs)(s.h6,{id:"chain-id-chain_id--current-node-version-version",children:["Chain ID: ",(0,o.jsx)(s.code,{children:"[CHAIN_ID]"})," | Current Node Version: ",(0,o.jsx)(s.code,{children:"[VERSION]"})]}),"\n",(0,o.jsx)(s.h2,{id:"our-seed-node",children:"Our seed node"}),"\n",(0,o.jsx)(s.p,{children:"You might also decide to use a seed node to bootstrap your node."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"[ENDPOINT_SEED]\n"})}),"\n",(0,o.jsx)(s.h2,{id:"our-peer",children:"Our peer"}),"\n",(0,o.jsxs)(s.p,{children:["When you state-sync, you might also consider adding [NODERS]TEAM state-sync peer to your persistent_peers setting in ",(0,o.jsx)(s.code,{children:"config.toml"}),"."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"[ENDPOINT_PEER]\n"})}),"\n",(0,o.jsx)(s.h2,{id:"live-peers",children:"Live Peers"}),"\n",(0,o.jsxs)(s.p,{children:["Here is a list of [LIVE_PEERS_COUNT] active peers as observed by [NODERS]TEAM in real-time. Add them to your ",(0,o.jsx)(s.code,{children:"config.toml"})," if you have trouble finding peers."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"[LIVE_PEERS_ALL]\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Here is a script for you to update ",(0,o.jsx)(s.code,{children:"persistent_peers"})," setting in ",(0,o.jsx)(s.code,{children:"config.toml"}),". Stale peers can cause node inefficiency over time, so the script below selects a few random live peers."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:'PEERS=[LIVE_PEERS_RANDOM]\nsed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \\"$PEERS\\"/" [DAEMON_HOME]/config/config.toml\n\nsudo systemctl restart [DAEMON_NAME]\nsudo journalctl -fu [DAEMON_NAME] --no-hostname -o cat\n'})}),"\n",(0,o.jsx)(s.h2,{id:"address-book",children:"Address book"}),"\n",(0,o.jsx)(s.p,{children:"The address book contains a list of previously connected peers. It helps your node find and connect to the network quickly. Download our address book to speed up your initial connection:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"curl https://snapshots.noders.services/[CHAIN_SYSTEM_NAME]/addrbook.json -o [DAEMON_HOME]/config/addrbook.json\nsudo systemctl restart [DAEMON_NAME]\n"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>i});var r=n(6540);const o={},t=r.createContext(o);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);