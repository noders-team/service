"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[6026],{1768:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"testnet-networks/template/live-peers","title":"Live peers","description":"# Live Peers","source":"@site/docs/testnet-networks/template/live-peers.mdx","sourceDirName":"testnet-networks/template","slug":"/testnet-networks/template/live-peers","permalink":"/service/testnet-networks/template/live-peers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"hide_table_of_contents":false,"title":"Live peers","sidebar_position":6}}');var t=s(4848),i=s(8453);const o={hide_table_of_contents:!1,title:"Live peers",sidebar_position:6},c="Live Peers",a={},l=[{value:"Chain ID: <code>[CHAIN_ID]</code> | Current Node Version: <code>[VERSION]</code>",id:"chain-id-chain_id--current-node-version-version",level:6},{value:"All Live Peers for [CHAIN_NAME]",id:"all-live-peers-for-chain_name",level:2},{value:"Our peer for [CHAIN_NAME]",id:"our-peer-for-chain_name",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h6:"h6",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("div",{class:"h1-with-icon icon-[CHAIN_SYSTEM_NAME]",children:(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"live-peers",children:"Live Peers"})})}),"\n",(0,t.jsxs)(n.h6,{id:"chain-id-chain_id--current-node-version-version",children:["Chain ID: ",(0,t.jsx)(n.code,{children:"[CHAIN_ID]"})," | Current Node Version: ",(0,t.jsx)(n.code,{children:"[VERSION]"})]}),"\n",(0,t.jsx)(n.h2,{id:"all-live-peers-for-chain_name",children:"All Live Peers for [CHAIN_NAME]"}),"\n",(0,t.jsxs)(n.p,{children:["Here is a list of [LIVE_PEERS_COUNT] active peers as observed by [NODERS]TEAM in real-time. Add them to your ",(0,t.jsx)(n.code,{children:"config.toml"})," if you have trouble finding peers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"[LIVE_PEERS_ALL]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Here is a script for you to update ",(0,t.jsx)(n.code,{children:"persistent_peers"})," setting in ",(0,t.jsx)(n.code,{children:"config.toml"}),". Stale peers can cause node inefficiency over time, so the script below selects a few random live peers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'PEERS=[LIVE_PEERS_RANDOM]\nsed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \\"$PEERS\\"/" [DAEMON_HOME]/config/config.toml\n\nsudo systemctl restart [DAEMON_NAME]\nsudo journalctl -fu [DAEMON_NAME] --no-hostname -o cat\n'})}),"\n",(0,t.jsx)(n.h2,{id:"our-peer-for-chain_name",children:"Our peer for [CHAIN_NAME]"}),"\n",(0,t.jsxs)(n.p,{children:["When you state-sync, you might also consider adding [NODERS]TEAM state-sync peer to your persistent_peers setting in ",(0,t.jsx)(n.code,{children:"config.toml"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"[ENDPOINT_PEER]\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(6540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);