"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([["4611"],{6885:function(e,s,r){r.r(s),r.d(s,{default:()=>u,frontMatter:()=>t,metadata:()=>i,assets:()=>d,toc:()=>l,contentTitle:()=>c});var i=JSON.parse('{"id":"testnet-networks/crossfi/upgrade","title":"Upgrade","description":"Chain ID 0.3.0-prebuild9","source":"@site/docs/testnet-networks/crossfi/upgrade.md","sourceDirName":"testnet-networks/crossfi","slug":"/testnet-networks/crossfi/upgrade","permalink":"/service/testnet-networks/crossfi/upgrade","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"hide_table_of_contents":false,"title":"Upgrade","sidebar_position":3},"sidebar":"testnetSidebar","previous":{"title":"Installation","permalink":"/service/testnet-networks/crossfi/install"},"next":{"title":"State sync","permalink":"/service/testnet-networks/crossfi/statesync"}}'),n=r("5893"),o=r("65");let t={hide_table_of_contents:!1,title:"Upgrade",sidebar_position:3},c="Upgrade",d={},l=[{value:"Chain ID: <code>crossfi-evm-testnet-1</code> | Current Node Version: <code>0.3.0-prebuild9</code>",id:"chain-id-crossfi-evm-testnet-1--current-node-version-030-prebuild9",level:6},{value:"Clone CrossFI repository",id:"clone-crossfi-repository",level:2},{value:"Build binaries",id:"build-binaries",level:2},{value:"Prepare binaries for Cosmovisor",id:"prepare-binaries-for-cosmovisor",level:2},{value:"Clone CrossFI repository",id:"clone-crossfi-repository-1",level:2},{value:"Build binaries",id:"build-binaries-1",level:2},{value:"Restart node and check logs",id:"restart-node-and-check-logs",level:3}];function a(e){let s={code:"code",h1:"h1",h2:"h2",h3:"h3",h6:"h6",header:"header",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{class:"h1-with-icon icon-crossfi",children:(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"upgrade",children:"Upgrade"})})}),"\n",(0,n.jsxs)(s.h6,{id:"chain-id-crossfi-evm-testnet-1--current-node-version-030-prebuild9",children:["Chain ID: ",(0,n.jsx)(s.code,{children:"crossfi-evm-testnet-1"})," | Current Node Version: ",(0,n.jsx)(s.code,{children:"0.3.0-prebuild9"})]}),"\n",(0,n.jsx)(s.h1,{id:"with-cosmovisor",children:"With Cosmovisor"}),"\n",(0,n.jsx)(s.h2,{id:"clone-crossfi-repository",children:"Clone CrossFI repository"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"cd $HOME\nrm -rf crossfichain\ngit clone https://github.com/crossfichain.git\ncd crossfichain\ngit checkout 0.3.0-prebuild9\n"})}),"\n",(0,n.jsx)(s.h2,{id:"build-binaries",children:"Build binaries"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"make build\n"})}),"\n",(0,n.jsx)(s.h2,{id:"prepare-binaries-for-cosmovisor",children:"Prepare binaries for Cosmovisor"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"mkdir -p ~/.mineplex-chain/cosmovisor/upgrades/0.3.0-prebuild9/bin\nmv build/crossfid ~/.mineplex-chain/cosmovisor/upgrades/0.3.0-prebuild9/bin/\nrm -rf build\n"})}),"\n",(0,n.jsx)(s.h1,{id:"without-cosmovisor",children:"Without Cosmovisor"}),"\n",(0,n.jsx)(s.h2,{id:"clone-crossfi-repository-1",children:"Clone CrossFI repository"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"cd $HOME\nrm -rf crossfichain\ngit clone https://github.com/crossfichain.git\ncd crossfichain\ngit checkout 0.3.0-prebuild9\n"})}),"\n",(0,n.jsx)(s.h2,{id:"build-binaries-1",children:"Build binaries"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"make install\n"})}),"\n",(0,n.jsx)(s.h3,{id:"restart-node-and-check-logs",children:"Restart node and check logs"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"sudo systemctl restart crossfid && sudo journalctl -u crossfid -f --no-hostname -o cat\n"})})]})}function u(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},65:function(e,s,r){r.d(s,{Z:function(){return c},a:function(){return t}});var i=r(7294);let n={},o=i.createContext(n);function t(e){let s=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);