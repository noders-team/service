"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[58243],{237:(e,n,t)=>{t.d(n,{A:()=>v});var a=t(96540),i=t(34164),r=t(21362),l=t(76955),s=t(26739),o=t(99640),d=t(13202),c=t(96148),h=t(1908);function p(e){return(0,h.Ay)("MuiDivider",e)}(0,c.A)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var u=t(74848);const m=(0,s.Ay)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,n)=>{const{ownerState:t}=e;return[n.root,t.absolute&&n.absolute,n[t.variant],t.light&&n.light,"vertical"===t.orientation&&n.vertical,t.flexItem&&n.flexItem,t.children&&n.withChildren,t.children&&"vertical"===t.orientation&&n.withChildrenVertical,"right"===t.textAlign&&"vertical"!==t.orientation&&n.textAlignRight,"left"===t.textAlign&&"vertical"!==t.orientation&&n.textAlignLeft]}})((0,o.A)((({theme:e})=>({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(e.vars||e).palette.divider,borderBottomWidth:"thin",variants:[{props:{absolute:!0},style:{position:"absolute",bottom:0,left:0,width:"100%"}},{props:{light:!0},style:{borderColor:e.vars?`rgba(${e.vars.palette.dividerChannel} / 0.08)`:(0,l.X4)(e.palette.divider,.08)}},{props:{variant:"inset"},style:{marginLeft:72}},{props:{variant:"middle",orientation:"horizontal"},style:{marginLeft:e.spacing(2),marginRight:e.spacing(2)}},{props:{variant:"middle",orientation:"vertical"},style:{marginTop:e.spacing(1),marginBottom:e.spacing(1)}},{props:{orientation:"vertical"},style:{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"}},{props:{flexItem:!0},style:{alignSelf:"stretch",height:"auto"}},{props:({ownerState:e})=>!!e.children,style:{display:"flex",textAlign:"center",border:0,borderTopStyle:"solid",borderLeftStyle:"solid","&::before, &::after":{content:'""',alignSelf:"center"}}},{props:({ownerState:e})=>e.children&&"vertical"!==e.orientation,style:{"&::before, &::after":{width:"100%",borderTop:`thin solid ${(e.vars||e).palette.divider}`,borderTopStyle:"inherit"}}},{props:({ownerState:e})=>"vertical"===e.orientation&&e.children,style:{flexDirection:"column","&::before, &::after":{height:"100%",borderLeft:`thin solid ${(e.vars||e).palette.divider}`,borderLeftStyle:"inherit"}}},{props:({ownerState:e})=>"right"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"90%"},"&::after":{width:"10%"}}},{props:({ownerState:e})=>"left"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"10%"},"&::after":{width:"90%"}}}]})))),g=(0,s.Ay)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,n)=>{const{ownerState:t}=e;return[n.wrapper,"vertical"===t.orientation&&n.wrapperVertical]}})((0,o.A)((({theme:e})=>({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`,whiteSpace:"nowrap",variants:[{props:{orientation:"vertical"},style:{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`}}]})))),f=a.forwardRef((function(e,n){const t=(0,d.b)({props:e,name:"MuiDivider"}),{absolute:a=!1,children:l,className:s,orientation:o="horizontal",component:c=(l||"vertical"===o?"div":"hr"),flexItem:h=!1,light:f=!1,role:v=("hr"!==c?"separator":void 0),textAlign:b="center",variant:x="fullWidth",...A}=t,_={...t,absolute:a,component:c,flexItem:h,light:f,orientation:o,role:v,textAlign:b,variant:x},y=(e=>{const{absolute:n,children:t,classes:a,flexItem:i,light:l,orientation:s,textAlign:o,variant:d}=e,c={root:["root",n&&"absolute",d,l&&"light","vertical"===s&&"vertical",i&&"flexItem",t&&"withChildren",t&&"vertical"===s&&"withChildrenVertical","right"===o&&"vertical"!==s&&"textAlignRight","left"===o&&"vertical"!==s&&"textAlignLeft"],wrapper:["wrapper","vertical"===s&&"wrapperVertical"]};return(0,r.A)(c,p,a)})(_);return(0,u.jsx)(m,{as:c,className:(0,i.A)(y.root,s),role:v,ref:n,ownerState:_,"aria-orientation":"separator"!==v||"hr"===c&&"vertical"!==o?void 0:o,...A,children:l?(0,u.jsx)(g,{className:y.wrapper,ownerState:_,children:l}):null})}));f&&(f.muiSkipListHighlight=!0);const v=f},17525:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"mainnet/namada/install","title":"Installation","description":"<PageTitle","source":"@site/docs/mainnet/namada/install.mdx","sourceDirName":"mainnet/namada","slug":"/mainnet/namada/install","permalink":"/service/mainnet/namada/install","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Installation","sidebar_position":2,"hide_title":true,"hide_table_of_contents":false},"sidebar":"mainnetSidebar","previous":{"title":"Namada","permalink":"/service/mainnet/namada"},"next":{"title":"Upgrade","permalink":"/service/mainnet/namada/upgrade"}}');var i=t(74848),r=t(28453),l=t(66030);const s={title:"Installation",sidebar_position:2,hide_title:!0,hide_table_of_contents:!1},o=void 0,d={},c=[{value:"Manual Installation",id:"manual-installation",level:2},{value:"Update packages and Install dependencies",id:"update-packages-and-install-dependencies",level:2},{value:"Install Go",id:"install-go",level:2},{value:"Set environment variables",id:"set-environment-variables",level:2},{value:"Install Rust",id:"install-rust",level:2},{value:"Install CometBFT",id:"install-cometbft",level:2},{value:"Download and build Namada binaries",id:"download-and-build-namada-binaries",level:2},{value:"Check Namada version",id:"check-namada-version",level:2},{value:"Join-network as Full Nodes or Post-Genesis Validator",id:"join-network-as-full-nodes-or-post-genesis-validator",level:2},{value:"Create Service file",id:"create-service-file",level:2},{value:"Set custom ports in config.toml",id:"set-custom-ports-in-configtoml",level:2},{value:"Add persistent peer",id:"add-persistent-peer",level:2},{value:"Enable and start service",id:"enable-and-start-service",level:2},{value:"Node Sync Status Checker",id:"node-sync-status-checker",level:2},{value:"Security",id:"security",level:2},{value:"Set up ssh keys for authentication",id:"set-up-ssh-keys-for-authentication",level:3},{value:"Firewall security",id:"firewall-security",level:3},{value:"Delete node",id:"delete-node",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.A,{iconUrl:"img/namada-icon.svg",title:"Installation",chainId:"namada.5f5de2dd1b88cba30586420",version:"v101.0.0"}),"\n",(0,i.jsx)(n.h2,{id:"manual-installation",children:"Manual Installation"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Recommended Hardware:"})," CPU: x86_64 or arm64, 8GB DDR4, 1TB of storage"]}),"\n",(0,i.jsx)(n.h2,{id:"update-packages-and-install-dependencies",children:"Update packages and Install dependencies"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt upgrade -y\nsudo apt-get install -y make git-core libssl-dev pkg-config libclang-12-dev build-essential protobuf-compiler\n"})}),"\n",(0,i.jsx)(n.h2,{id:"install-go",children:"Install Go"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'cd $HOME\n! [ -x "$(command -v go)" ] && {\nVER="1.20.3"\nwget "https://golang.org/dl/go$VER.linux-amd64.tar.gz"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"\nrm "go$VER.linux-amd64.tar.gz"\n[ ! -f ~/.bash_profile ] && touch ~/.bash_profile\necho "export PATH=$PATH:/usr/local/go/bin:~/go/bin" >> ~/.bash_profile\nsource $HOME/.bash_profile\n}\n[ ! -d ~/go/bin ] && mkdir -p ~/go/bin\n'})}),"\n",(0,i.jsx)(n.h2,{id:"set-environment-variables",children:"Set environment variables"}),"\n",(0,i.jsx)(n.p,{children:"Replace your Validator and Wallet name, save and import variables into system. Change default port if needed."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'NAMADA_PORT=26\necho "export NAMADA_PORT="$NAMADA_PORT"" >> $HOME/.bash_profile\necho "export ALIAS="CHOOSE_A_NAME_FOR_YOUR_VALIDATOR"" >> $HOME/.bash_profile\necho "export MEMO="CHOOSE_YOUR_tpknam_ADDRESS"" >> $HOME/.bash_profile\necho "export WALLET="wallet"" >> $HOME/.bash_profile\necho "export PUBLIC_IP=$(wget -qO- eth0.me)" >> $HOME/.bash_profile\necho "export CHAIN_ID="namada.5f5de2dd1b88cba30586420"" >> $HOME/.bash_profile\necho "export BASE_DIR="$HOME/.local/share/namada"" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n# set custom configs server\nexport NAMADA_NETWORK_CONFIGS_SERVER="https://github.com/anoma/namada-mainnet-genesis/releases/download/mainnet-genesis"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"install-rust",children:"Install Rust"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nsource $HOME/.cargo/env\n"})}),"\n",(0,i.jsx)(n.h2,{id:"install-cometbft",children:"Install CometBFT"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd $HOME\nrm -rf cometbft\ngit clone https://github.com/cometbft/cometbft.git\ncd cometbft\ngit checkout v0.37.15\nmake build\nsudo cp $HOME/cometbft/build/cometbft /usr/local/bin/\ncometbft version\n"})}),"\n",(0,i.jsx)(n.h2,{id:"download-and-build-namada-binaries",children:"Download and build Namada binaries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'cd $HOME\nrm -rf namada\ngit clone https://github.com/anoma/namada\ncd namada\nwget https://github.com/anoma/namada/releases/download/v101.0.0/namada-v101.0.0-Linux-x86_64.tar.gz\ntar -xvf namada-v101.0.0-Linux-x86_64.tar.gz\nrm namada-v101.0.0-Linux-x86_64.tar.gz\ncd namada-v101.0.0-Linux-x86_64\nsudo mv namad* /usr/local/bin/\nif [ ! -d "$BASE_DIR" ]; then\n    mkdir -p "$BASE_DIR"\nfi\n'})}),"\n",(0,i.jsx)(n.h2,{id:"check-namada-version",children:"Check Namada version"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"namada --version\n"})}),"\n",(0,i.jsx)(n.h2,{id:"join-network-as-full-nodes-or-post-genesis-validator",children:"Join-network as Full Nodes or Post-Genesis Validator"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'namadac utils join-network --chain-id $CHAIN_ID\nsed -i \'s#persistent_peers = ".*"#persistent_peers = "tcp://05309c2cce2d163027a47c662066907e89cd6b99@74.50.93.254:26656,tcp://2bf5cdd25975c239e8feb68153d69c5eec004fdb@64.118.250.82:46656"#\' $HOME/.local/share/namada/namada.5f5de2dd1b88cba30586420/config.toml\n'})}),"\n",(0,i.jsx)(n.h2,{id:"create-service-file",children:"Create Service file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo tee /etc/systemd/system/namadad.service > /dev/null <<EOF\n[Unit]\nDescription=namada\nAfter=network-online.target\n\n[Service]\nUser=$USER\nWorkingDirectory=$BASE_DIR\nEnvironment=CMT_LOG_LEVEL=p2p:none,pex:error\nEnvironment=NAMADA_CMT_STDOUT=true\nExecStart=$(which namada) node ledger run\nStandardOutput=syslog\nStandardError=syslog\nRestart=always\nRestartSec=10\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,i.jsx)(n.h2,{id:"set-custom-ports-in-configtoml",children:"Set custom ports in config.toml"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sed -i.bak -e "s%:26658%:${NAMADA_PORT}658%g;\ns%:26657%:${NAMADA_PORT}657%g;\ns%:26656%:${NAMADA_PORT}656%g;\ns%:26545%:${NAMADA_PORT}545%g;\ns%:8545%:${NAMADA_PORT}545%g;\ns%:26660%:${NAMADA_PORT}660%g" $HOME/.local/share/namada/namada.5f5de2dd1b88cba30586420/config.toml\n'})}),"\n",(0,i.jsx)(n.h2,{id:"add-persistent-peer",children:"Add persistent peer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sed -i \'s#persistent_peers = ".*"#persistent_peers = "tcp://05309c2cce2d163027a47c662066907e89cd6b99@74.50.93.254:26656,tcp://2bf5cdd25975c239e8feb68153d69c5eec004fdb@64.118.250.82:46656"#\' $HOME/.local/share/namada/namada.5f5de2dd1b88cba30586420/config.toml\n'})}),"\n",(0,i.jsx)(n.h2,{id:"enable-and-start-service",children:"Enable and start service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\nsudo systemctl enable namadad\nsudo systemctl restart namadad && sudo journalctl -u namadad -f\n"})}),"\n",(0,i.jsx)(n.h2,{id:"node-sync-status-checker",children:"Node Sync Status Checker"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\nrpc_port=$(grep -m 1 -oP \'^laddr = "\\K[^"]+\' "$HOME/.local/share/namada/namada.5f5de2dd1b88cba30586420/cometbft/config/config.toml" | cut -d \':\' -f 3)\nwhile true; do\n  local_height=$(curl -s localhost:$rpc_port/status | jq -r \'.result.sync_info.latest_block_height\')\n  network_height=$(curl -s https://namada-mainnet-rpc.itrocket.net/status | jq -r \'.result.sync_info.latest_block_height\')\n\n  if ! [[ "$local_height" =~ ^[0-9]+$ ]] || ! [[ "$network_height" =~ ^[0-9]+$ ]]; then\n    echo -e "\\033[1;31mError: Invalid block height data. Retrying...\\033[0m"\n    sleep 5\n    continue\n  fi\n\n  blocks_left=$((network_height - local_height))\n  if [ "$blocks_left" -lt 0 ]; then\n    blocks_left=0\n  fi\n\n  echo -e "\\033[1;33mYour Node Height:\\033[1;34m $local_height\\033[0m \\033[1;33m| Network Height:\\033[1;36m $network_height\\033[0m \\033[1;33m| Blocks Left:\\033[1;31m $blocks_left\\033[0m"\n\n  sleep 5\ndone\n'})}),"\n",(0,i.jsx)(n.h2,{id:"security",children:"Security"}),"\n",(0,i.jsx)(n.p,{children:"To protect your keys please don't share your privkey, mnemonic and follow basic security rules."}),"\n",(0,i.jsx)(n.h3,{id:"set-up-ssh-keys-for-authentication",children:"Set up ssh keys for authentication"}),"\n",(0,i.jsx)(n.p,{children:"You can use this guide to configure ssh authentication and disable password authentication on your server."}),"\n",(0,i.jsx)(n.h3,{id:"firewall-security",children:"Firewall security"}),"\n",(0,i.jsx)(n.p,{children:"Set the default to allow outgoing connections, deny all incoming, allow ssh and node p2p port"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo ufw default allow outgoing \nsudo ufw default deny incoming \nsudo ufw allow ssh/tcp \nsudo ufw allow ${NAMADA_PORT}656/tcp\nsudo ufw enable\n"})}),"\n",(0,i.jsx)(n.h2,{id:"delete-node",children:"Delete node"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop namadad\nsudo systemctl disable namadad\nsudo rm -rf /etc/systemd/system/namadad.service\nsudo systemctl daemon-reload\nsudo rm $(which namada)\nsudo rm -rf $HOME/.local/share/namada/namada.5f5de2dd1b88cba30586420\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var a=t(96540);const i={},r=a.createContext(i);function l(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:n},e.children)}},66030:(e,n,t)=>{t.d(n,{A:()=>d});t(96540);var a=t(32673),i=t(81848),r=t(86025),l=t(97555),s=t(237),o=t(74848);const d=function({iconUrl:e,title:n,chainId:t,version:d}){const c=(0,r.Ay)(e);return(0,o.jsxs)(a.A,{display:"flex",flexDirection:"column",gap:2,children:[(0,o.jsxs)(a.A,{display:"flex",alignItems:"center",gap:2,children:[(0,o.jsx)(a.A,{component:"img",src:c,alt:n,width:56,height:56}),(0,o.jsx)(i.A,{variant:"h1",children:n})]}),t&&d&&(0,o.jsxs)(a.A,{display:"flex",flexWrap:"wrap",gap:2,children:[(0,o.jsxs)(a.A,{display:"flex",gap:2,children:[(0,o.jsx)(i.A,{variant:"subtitle2",children:"Chain ID:"}),(0,o.jsx)(l.A,{text:t})]}),(0,o.jsx)(s.A,{orientation:"vertical",flexItem:!0}),(0,o.jsxs)(a.A,{display:"flex",gap:2,children:[(0,o.jsx)(i.A,{variant:"subtitle2",children:"Current Node Version:"}),(0,o.jsx)(l.A,{text:d})]})]})]})}},97555:(e,n,t)=>{t.d(n,{A:()=>l});t(96540);var a=t(32673),i=t(81848),r=t(74848);const l=function({text:e}){return(0,r.jsx)(a.A,{display:"flex",paddingY:.5,paddingX:1,borderRadius:2,alignItems:"center",sx:{backgroundColor:"#20222C"},children:(0,r.jsx)(i.A,{variant:"body2",sx:{fontFamily:"Consolas, monospace",fontSize:"15px",fontWeight:400,fontStyle:"normal",lineHeight:"16px"},children:e})})}}}]);