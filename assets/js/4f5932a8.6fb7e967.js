"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[98275],{122:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"mainnet/gitopia/install","title":"Installation Guide","description":"","source":"@site/docs/mainnet/gitopia/install.mdx","sourceDirName":"mainnet/gitopia","slug":"/mainnet/gitopia/install","permalink":"/service/mainnet/gitopia/install","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Installation Guide","sidebar_position":1,"hide_title":true,"hide_table_of_contents":false,"description":"","chain_name":"Gitopia","scope":"mainnet","chain_id":"auto","binary_version":"auto","icon_url":"gitopia-icon.svg"}}');var o=n(74848),a=n(28453),r=n(66030);const s={title:"Installation Guide",sidebar_position:1,hide_title:!0,hide_table_of_contents:!1,description:"",chain_name:"Gitopia",scope:"mainnet",chain_id:"auto",binary_version:"auto",icon_url:"gitopia-icon.svg"},l=void 0,d={},c=[{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Install GO",id:"install-go",level:2},{value:"Install with Cosmovisor",id:"install-with-cosmovisor",level:2},{value:"Download and build binaries",id:"download-and-build-binaries",level:3},{value:"Clone Gitopia repo and build gitopiad auto",id:"clone-gitopia-repo-and-build-gitopiad-auto",level:3},{value:"Build binaries",id:"build-binaries",level:3},{value:"Prepare binaries for Cosmovisor",id:"prepare-binaries-for-cosmovisor",level:3},{value:"Create symlinks",id:"create-symlinks",level:3},{value:"Download and install Cosmovisor",id:"download-and-install-cosmovisor",level:2},{value:"Run node",id:"run-node",level:2},{value:"Create service",id:"create-service",level:3},{value:"Install without Cosmovisor",id:"install-without-cosmovisor",level:2},{value:"Download and build binaries",id:"download-and-build-binaries-1",level:3},{value:"Clone Gitopia repo and build gitopiad auto",id:"clone-gitopia-repo-and-build-gitopiad-auto-1",level:3},{value:"Build binaries",id:"build-binaries-1",level:3},{value:"Run node",id:"run-node-1",level:2},{value:"Create service",id:"create-service-1",level:3},{value:"Enable service",id:"enable-service",level:3},{value:"Node configuration",id:"node-configuration",level:2},{value:"Set config",id:"set-config",level:3},{value:"Initialize the node",id:"initialize-the-node",level:3},{value:"Download genesis and addrbook",id:"download-genesis-and-addrbook",level:3},{value:"Add peers",id:"add-peers",level:3},{value:"Set minimum gas price",id:"set-minimum-gas-price",level:3},{value:"Set pruning",id:"set-pruning",level:3},{value:"Set custom ports",id:"set-custom-ports",level:3}];function p(e){const i={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.A,{iconUrl:"img/gitopia-icon.svg",title:"Gitopia Installation Guide",chainId:"auto",version:"auto"}),"\n",(0,o.jsx)(i.h2,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"sudo apt -q update\nsudo apt -qy install curl git jq lz4 build-essential\nsudo apt -qy upgrade\n"})}),"\n",(0,o.jsx)(i.h2,{id:"install-go",children:"Install GO"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:'ver="1.21.3" &&\nwget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" &&\nsudo rm -rf /usr/local/go &&\nsudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" &&\nrm "go$ver.linux-amd64.tar.gz" &&\necho "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile &&\nsource $HOME/.bash_profile &&\ngo version\n'})}),"\n",(0,o.jsx)(i.h2,{id:"install-with-cosmovisor",children:"Install with Cosmovisor"}),"\n",(0,o.jsx)(i.admonition,{title:"ADVANCED ROUTE",type:"note",children:(0,o.jsx)(i.p,{children:"Cosmosvisor is a process manager for Cosmos SDK application binaries that monitors the governance module for incoming chain upgrade proposals. If a proposal is approved, cosmosvisor can automatically download the new binary, stop the current one, switch to the new binary, and restart the node with the new binary."})}),"\n",(0,o.jsx)(i.h3,{id:"download-and-build-binaries",children:"Download and build binaries"}),"\n",(0,o.jsx)(i.h3,{id:"clone-gitopia-repo-and-build-gitopiad-auto",children:"Clone Gitopia repo and build gitopiad auto"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"cd $HOME\ngit clone https://github.com/gitopia.git\ncd gitopia\ngit checkout auto\n"})}),"\n",(0,o.jsx)(i.h3,{id:"build-binaries",children:"Build binaries"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"make install\n"})}),"\n",(0,o.jsx)(i.h3,{id:"prepare-binaries-for-cosmovisor",children:"Prepare binaries for Cosmovisor"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"cd $HOME\nmkdir -p ~/.gitopia/cosmovisor/upgrades/auto/bin\nmv $HOME/go/bin/gitopiad ~/.gitopia/cosmovisor/upgrades/auto/bin/\n"})}),"\n",(0,o.jsx)(i.h3,{id:"create-symlinks",children:"Create symlinks"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"sudo ln -s ~/.gitopia/cosmovisor/genesis ~/.gitopia/cosmovisor/current -f\nsudo ln -s ~/.gitopia/cosmovisor/current/bin/gitopiad /usr/local/bin/gitopiad -f\n"})}),"\n",(0,o.jsx)(i.h2,{id:"download-and-install-cosmovisor",children:"Download and install Cosmovisor"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@v1.7.1\n"})}),"\n",(0,o.jsx)(i.h2,{id:"run-node",children:"Run node"}),"\n",(0,o.jsx)(i.h3,{id:"create-service",children:"Create service"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:'sudo tee /etc/systemd/system/gitopiad.service > /dev/null << EOF\n[Unit]\nDescription=gitopia node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which cosmovisor) run start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\nEnvironment="DAEMON_HOME=~/.gitopia"\nEnvironment="DAEMON_NAME=gitopiad"\nEnvironment="UNSAFE_SKIP_BACKUP=true"\nEnvironment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:~/.gitopia/cosmovisor/current/bin"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,o.jsx)(i.h2,{id:"install-without-cosmovisor",children:"Install without Cosmovisor"}),"\n",(0,o.jsx)(i.h3,{id:"download-and-build-binaries-1",children:"Download and build binaries"}),"\n",(0,o.jsx)(i.h3,{id:"clone-gitopia-repo-and-build-gitopiad-auto-1",children:"Clone Gitopia repo and build gitopiad auto"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"cd $HOME\ngit clone https://github.com/gitopia.git\ncd gitopia\ngit checkout auto\n"})}),"\n",(0,o.jsx)(i.h3,{id:"build-binaries-1",children:"Build binaries"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"make install\n"})}),"\n",(0,o.jsx)(i.h2,{id:"run-node-1",children:"Run node"}),"\n",(0,o.jsx)(i.h3,{id:"create-service-1",children:"Create service"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:'sudo tee /etc/systemd/system/gitopiad.service > /dev/null << EOF\n[Unit]\nDescription=gitopia node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which gitopiad) start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\nEnvironment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,o.jsx)(i.h3,{id:"enable-service",children:"Enable service"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"sudo systemctl daemon-reload\nsudo systemctl enable gitopiad\n"})}),"\n",(0,o.jsx)(i.h2,{id:"node-configuration",children:"Node configuration"}),"\n",(0,o.jsx)(i.h3,{id:"set-config",children:"Set config"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"gitopiad config chain-id auto\ngitopiad config keyring-backend os\ngitopiad config node tcp://localhost:26657\n"})}),"\n",(0,o.jsx)(i.h3,{id:"initialize-the-node",children:"Initialize the node"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"gitopiad init NAME_OF_YOUR_VALIDATOR --chain-id auto\n"})}),"\n",(0,o.jsx)(i.h3,{id:"download-genesis-and-addrbook",children:"Download genesis and addrbook"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"curl https://snapshots.noders.services/gitopia/genesis.json -o ~/.gitopia/config/genesis.json\ncurl https://snapshots.noders.services/gitopia/addrbook.json -o ~/.gitopia/config/addrbook.json\n"})}),"\n",(0,o.jsx)(i.h3,{id:"add-peers",children:"Add peers"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:'sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \\"auto\\"/" ~/.gitopia/config/config.toml\n'})}),"\n",(0,o.jsx)(i.h3,{id:"set-minimum-gas-price",children:"Set minimum gas price"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:'sed -i -e "s|^minimum-gas-prices *=.*|minimum-gas-prices = \\"0.001ulore\\"|" ~/.gitopia/config/app.toml\n'})}),"\n",(0,o.jsx)(i.h3,{id:"set-pruning",children:"Set pruning"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"sed -i \\\n  -e 's|^pruning *=.*|pruning = \"custom\"|' \\\n  -e 's|^pruning-keep-recent *=.*|pruning-keep-recent = \"100\"|' \\\n  -e 's|^pruning-keep-every *=.*|pruning-keep-every = \"0\"|' \\\n  -e 's|^pruning-interval *=.*|pruning-interval = \"19\"|' \\\n  ~/.gitopia/config/app.toml\n"})}),"\n",(0,o.jsx)(i.h3,{id:"set-custom-ports",children:"Set custom ports"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:'echo "export GITOPIAD_PORT="SET_YOUR_PORT"" >> $HOME/.bash_profile\n'})}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:'# Set custom ports in app.tom{l\nsed -i.bak -e "s%:1317%:${GITOPIAD_PORT}317%g" \\\n-e "s%:8080%:${GITOPIAD_PORT}080%g" \\\n-e "s%:9090%:${GITOPIAD_PORT}090%g" \\\n-e "s%:9091%:${GITOPIAD_PORT}091%g" \\\n-e "s%:8545%:${GITOPIAD_PORT}545%g" \\\n-e "s%:8546%:${GITOPIAD_PORT}546%g" \\\n-e "s%:6065%:${GITOPIAD_PORT}065%g" ~/.gitopia/config/app.toml\n\n# Set custom ports in config.toml file\nsed -i.bak -e "s%:26658%:${GITOPIAD_PORT}658%g" \\\n-e "s%:26657%:${GITOPIAD_PORT}657%g" \\\n-e "s%:6060%:${GITOPIAD_PORT}060%g" \\\n-e "s%:26656%:${GITOPIAD_PORT}656%g" \\\n-e "s%:26660%:${GITOPIAD_PORT}660%g" ~/.gitopia/config/config.toml\n'})})]})}function g(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},237:(e,i,n)=>{n.d(i,{A:()=>x});var t=n(96540),o=n(34164),a=n(21362),r=n(76955),s=n(26739),l=n(99640),d=n(13202),c=n(96148),p=n(1908);function g(e){return(0,p.Ay)("MuiDivider",e)}(0,c.A)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var u=n(74848);const h=(0,s.Ay)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,i)=>{const{ownerState:n}=e;return[i.root,n.absolute&&i.absolute,i[n.variant],n.light&&i.light,"vertical"===n.orientation&&i.vertical,n.flexItem&&i.flexItem,n.children&&i.withChildren,n.children&&"vertical"===n.orientation&&i.withChildrenVertical,"right"===n.textAlign&&"vertical"!==n.orientation&&i.textAlignRight,"left"===n.textAlign&&"vertical"!==n.orientation&&i.textAlignLeft]}})((0,l.A)((({theme:e})=>({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(e.vars||e).palette.divider,borderBottomWidth:"thin",variants:[{props:{absolute:!0},style:{position:"absolute",bottom:0,left:0,width:"100%"}},{props:{light:!0},style:{borderColor:e.vars?`rgba(${e.vars.palette.dividerChannel} / 0.08)`:(0,r.X4)(e.palette.divider,.08)}},{props:{variant:"inset"},style:{marginLeft:72}},{props:{variant:"middle",orientation:"horizontal"},style:{marginLeft:e.spacing(2),marginRight:e.spacing(2)}},{props:{variant:"middle",orientation:"vertical"},style:{marginTop:e.spacing(1),marginBottom:e.spacing(1)}},{props:{orientation:"vertical"},style:{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"}},{props:{flexItem:!0},style:{alignSelf:"stretch",height:"auto"}},{props:({ownerState:e})=>!!e.children,style:{display:"flex",textAlign:"center",border:0,borderTopStyle:"solid",borderLeftStyle:"solid","&::before, &::after":{content:'""',alignSelf:"center"}}},{props:({ownerState:e})=>e.children&&"vertical"!==e.orientation,style:{"&::before, &::after":{width:"100%",borderTop:`thin solid ${(e.vars||e).palette.divider}`,borderTopStyle:"inherit"}}},{props:({ownerState:e})=>"vertical"===e.orientation&&e.children,style:{flexDirection:"column","&::before, &::after":{height:"100%",borderLeft:`thin solid ${(e.vars||e).palette.divider}`,borderLeftStyle:"inherit"}}},{props:({ownerState:e})=>"right"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"90%"},"&::after":{width:"10%"}}},{props:({ownerState:e})=>"left"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"10%"},"&::after":{width:"90%"}}}]})))),v=(0,s.Ay)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,i)=>{const{ownerState:n}=e;return[i.wrapper,"vertical"===n.orientation&&i.wrapperVertical]}})((0,l.A)((({theme:e})=>({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`,whiteSpace:"nowrap",variants:[{props:{orientation:"vertical"},style:{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`}}]})))),m=t.forwardRef((function(e,i){const n=(0,d.b)({props:e,name:"MuiDivider"}),{absolute:t=!1,children:r,className:s,orientation:l="horizontal",component:c=(r||"vertical"===l?"div":"hr"),flexItem:p=!1,light:m=!1,role:x=("hr"!==c?"separator":void 0),textAlign:b="center",variant:f="fullWidth",...j}=n,w={...n,absolute:t,component:c,flexItem:p,light:m,orientation:l,role:x,textAlign:b,variant:f},A=(e=>{const{absolute:i,children:n,classes:t,flexItem:o,light:r,orientation:s,textAlign:l,variant:d}=e,c={root:["root",i&&"absolute",d,r&&"light","vertical"===s&&"vertical",o&&"flexItem",n&&"withChildren",n&&"vertical"===s&&"withChildrenVertical","right"===l&&"vertical"!==s&&"textAlignRight","left"===l&&"vertical"!==s&&"textAlignLeft"],wrapper:["wrapper","vertical"===s&&"wrapperVertical"]};return(0,a.A)(c,g,t)})(w);return(0,u.jsx)(h,{as:c,className:(0,o.A)(A.root,s),role:x,ref:i,ownerState:w,"aria-orientation":"separator"!==x||"hr"===c&&"vertical"!==l?void 0:l,...j,children:r?(0,u.jsx)(v,{className:A.wrapper,ownerState:w,children:r}):null})}));m&&(m.muiSkipListHighlight=!0);const x=m},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>s});var t=n(96540);const o={},a=t.createContext(o);function r(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:i},e.children)}},66030:(e,i,n)=>{n.d(i,{A:()=>d});n(96540);var t=n(32673),o=n(81848),a=n(86025),r=n(97555),s=n(237),l=n(74848);const d=function({iconUrl:e,title:i,chainId:n,version:d}){const c=(0,a.Ay)(e);return(0,l.jsxs)(t.A,{display:"flex",flexDirection:"column",gap:2,children:[(0,l.jsxs)(t.A,{display:"flex",alignItems:"center",gap:2,children:[(0,l.jsx)(t.A,{component:"img",src:c,alt:i,width:56,height:56}),(0,l.jsx)(o.A,{variant:"h1",children:i})]}),n&&d&&(0,l.jsxs)(t.A,{display:"flex",flexWrap:"wrap",gap:2,children:[(0,l.jsxs)(t.A,{display:"flex",gap:2,children:[(0,l.jsx)(o.A,{variant:"subtitle2",children:"Chain ID:"}),(0,l.jsx)(r.A,{text:n})]}),(0,l.jsx)(s.A,{orientation:"vertical",flexItem:!0}),(0,l.jsxs)(t.A,{display:"flex",gap:2,children:[(0,l.jsx)(o.A,{variant:"subtitle2",children:"Current Node Version:"}),(0,l.jsx)(r.A,{text:d})]})]})]})}},97555:(e,i,n)=>{n.d(i,{A:()=>r});n(96540);var t=n(32673),o=n(81848),a=n(74848);const r=function({text:e}){return(0,a.jsx)(t.A,{display:"flex",paddingY:.5,paddingX:1,borderRadius:2,alignItems:"center",sx:{backgroundColor:"#20222C"},children:(0,a.jsx)(o.A,{variant:"body2",sx:{fontFamily:"Consolas, monospace",fontSize:"15px",fontWeight:400,fontStyle:"normal",lineHeight:"16px"},children:e})})}}}]);