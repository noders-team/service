"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[16287],{237:(e,t,n)=>{n.d(t,{A:()=>y});var r=n(96540),s=n(34164),i=n(21362),o=n(76955),a=n(26739),l=n(99640),d=n(13202),c=n(96148),h=n(1908);function p(e){return(0,h.Ay)("MuiDivider",e)}(0,c.A)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var u=n(74848);const g=(0,a.Ay)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.absolute&&t.absolute,t[n.variant],n.light&&t.light,"vertical"===n.orientation&&t.vertical,n.flexItem&&t.flexItem,n.children&&t.withChildren,n.children&&"vertical"===n.orientation&&t.withChildrenVertical,"right"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignRight,"left"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignLeft]}})((0,l.A)((({theme:e})=>({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(e.vars||e).palette.divider,borderBottomWidth:"thin",variants:[{props:{absolute:!0},style:{position:"absolute",bottom:0,left:0,width:"100%"}},{props:{light:!0},style:{borderColor:e.vars?`rgba(${e.vars.palette.dividerChannel} / 0.08)`:(0,o.X4)(e.palette.divider,.08)}},{props:{variant:"inset"},style:{marginLeft:72}},{props:{variant:"middle",orientation:"horizontal"},style:{marginLeft:e.spacing(2),marginRight:e.spacing(2)}},{props:{variant:"middle",orientation:"vertical"},style:{marginTop:e.spacing(1),marginBottom:e.spacing(1)}},{props:{orientation:"vertical"},style:{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"}},{props:{flexItem:!0},style:{alignSelf:"stretch",height:"auto"}},{props:({ownerState:e})=>!!e.children,style:{display:"flex",textAlign:"center",border:0,borderTopStyle:"solid",borderLeftStyle:"solid","&::before, &::after":{content:'""',alignSelf:"center"}}},{props:({ownerState:e})=>e.children&&"vertical"!==e.orientation,style:{"&::before, &::after":{width:"100%",borderTop:`thin solid ${(e.vars||e).palette.divider}`,borderTopStyle:"inherit"}}},{props:({ownerState:e})=>"vertical"===e.orientation&&e.children,style:{flexDirection:"column","&::before, &::after":{height:"100%",borderLeft:`thin solid ${(e.vars||e).palette.divider}`,borderLeftStyle:"inherit"}}},{props:({ownerState:e})=>"right"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"90%"},"&::after":{width:"10%"}}},{props:({ownerState:e})=>"left"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"10%"},"&::after":{width:"90%"}}}]})))),v=(0,a.Ay)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.wrapper,"vertical"===n.orientation&&t.wrapperVertical]}})((0,l.A)((({theme:e})=>({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`,whiteSpace:"nowrap",variants:[{props:{orientation:"vertical"},style:{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`}}]})))),m=r.forwardRef((function(e,t){const n=(0,d.b)({props:e,name:"MuiDivider"}),{absolute:r=!1,children:o,className:a,orientation:l="horizontal",component:c=(o||"vertical"===l?"div":"hr"),flexItem:h=!1,light:m=!1,role:y=("hr"!==c?"separator":void 0),textAlign:f="center",variant:x="fullWidth",...b}=n,E={...n,absolute:r,component:c,flexItem:h,light:m,orientation:l,role:y,textAlign:f,variant:x},j=(e=>{const{absolute:t,children:n,classes:r,flexItem:s,light:o,orientation:a,textAlign:l,variant:d}=e,c={root:["root",t&&"absolute",d,o&&"light","vertical"===a&&"vertical",s&&"flexItem",n&&"withChildren",n&&"vertical"===a&&"withChildrenVertical","right"===l&&"vertical"!==a&&"textAlignRight","left"===l&&"vertical"!==a&&"textAlignLeft"],wrapper:["wrapper","vertical"===a&&"wrapperVertical"]};return(0,i.A)(c,p,r)})(E);return(0,u.jsx)(g,{as:c,className:(0,s.A)(j.root,a),role:y,ref:t,ownerState:E,"aria-orientation":"separator"!==y||"hr"===c&&"vertical"!==l?void 0:l,...b,children:o?(0,u.jsx)(v,{className:j.wrapper,ownerState:E,children:o}):null})}));m&&(m.muiSkipListHighlight=!0);const y=m},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(96540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},54511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"testnet-networks/story/install","title":"Installation Guide","description":"","source":"@site/docs/testnet-networks/story/install.mdx","sourceDirName":"testnet-networks/story","slug":"/testnet-networks/story/install","permalink":"/service/testnet-networks/story/install","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Installation Guide","sidebar_position":2,"hide_title":true,"hide_table_of_contents":false,"description":"","chain_name":"Story","scope":"testnet","chain_id":"devnet-1","binary_version":"v1.2.0","icon_url":"story-icon.svg"},"sidebar":"testnetSidebar","previous":{"title":"Story","permalink":"/service/testnet-networks/story"},"next":{"title":"Upgrade Guide","permalink":"/service/testnet-networks/story/upgrade"}}');var s=n(74848),i=n(28453),o=n(66030);const a={title:"Installation Guide",sidebar_position:2,hide_title:!0,hide_table_of_contents:!1,description:"",chain_name:"Story",scope:"testnet",chain_id:"devnet-1",binary_version:"v1.2.0",icon_url:"story-icon.svg"},l=void 0,d={},c=[{value:"Manual Installation",id:"manual-installation",level:2},{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Install Go",id:"install-go",level:2},{value:"Set environment variables",id:"set-environment-variables",level:2},{value:"Download and build binaries",id:"download-and-build-binaries",level:2},{value:"Initialize node",id:"initialize-node",level:2},{value:"Configure node",id:"configure-node",level:2},{value:"Create service files",id:"create-service-files",level:2},{value:"Start services",id:"start-services",level:2},{value:"Cosmovisor Setup",id:"cosmovisor-setup",level:2},{value:"Create validator",id:"create-validator",level:2},{value:"Before creating a validator, wait for your node to get fully synced. Once &quot;catching_up&quot; is &quot;false&quot;, move on to the next step",id:"before-creating-a-validator-wait-for-your-node-to-get-fully-synced-once-catching_up-is-false-move-on-to-the-next-step",level:3},{value:"Create validator, locked",id:"create-validator-locked",level:3},{value:"Create validator, unlocked",id:"create-validator-unlocked",level:3},{value:"Firewall rules",id:"firewall-rules",level:2},{value:"Delete node",id:"delete-node",level:2}];function h(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.A,{iconUrl:"img/story-icon.svg",title:"Story Installation Guide",chainId:"devnet-1",version:"v1.2.0"}),"\n",(0,s.jsx)(t.h2,{id:"manual-installation",children:"Manual Installation"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Recommended Hardware:"})," 6 Cores, 16GB RAM, 400GB of storage (NVME), 100 Mb/s"]}),"\n",(0,s.jsx)(t.h2,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# install dependencies, if needed\nsudo apt update && sudo apt upgrade -y\nsudo apt install curl git wget htop tmux build-essential jq make lz4 gcc unzip -y\n"})}),"\n",(0,s.jsx)(t.h2,{id:"install-go",children:"Install Go"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'# install go, if needed\ncd $HOME\nVER="1.22.5"\nwget "https://golang.org/dl/go$VER.linux-amd64.tar.gz"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"\nrm "go$VER.linux-amd64.tar.gz"\n[ ! -f ~/.bash_profile ] && touch ~/.bash_profile\necho "export PATH=$PATH:/usr/local/go/bin:~/go/bin" >> ~/.bash_profile\nsource $HOME/.bash_profile\n[ ! -d ~/go/bin ] && mkdir -p ~/go/bin\n'})}),"\n",(0,s.jsx)(t.h2,{id:"set-environment-variables",children:"Set environment variables"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'# set vars\necho "export MONIKER="test"" >> $HOME/.bash_profile\necho "export STORY_CHAIN_ID="devnet-1"" >> $HOME/.bash_profile\necho "export STORY_PORT="52"" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n'})}),"\n",(0,s.jsx)(t.h2,{id:"download-and-build-binaries",children:"Download and build binaries"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'# download binaries\ncd $HOME\nrm -rf story-geth\ngit clone https://github.com/piplabs/story-geth.git\ncd story-geth\ngit checkout v1.1.0\nmake geth\nmv build/bin/geth  $HOME/go/bin/\n[ ! -d "$HOME/.story/story" ] && mkdir -p "$HOME/.story/story"\n[ ! -d "$HOME/.story/geth" ] && mkdir -p "$HOME/.story/geth"\n\n# install Story\ncd $HOME\nrm -rf story\ngit clone https://github.com/piplabs/story\ncd story\ngit checkout v1.2.0\ngo build -o story ./client \nmkdir -p $HOME/go/bin/\nmv $HOME/story/story $HOME/go/bin/\n'})}),"\n",(0,s.jsx)(t.h2,{id:"initialize-node",children:"Initialize node"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# init story app\nstory init --moniker $MONIKER --network $STORY_CHAIN_ID\n"})}),"\n",(0,s.jsx)(t.h2,{id:"configure-node",children:"Configure node"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'# set seeds and peers\nSEEDS="cf7cd44feb2ce662eed7bff437dc5a08f2f8b0f9@story-t-seed.noders.services:26656"\nPEERS="cf7cd44feb2ce662eed7bff437dc5a08f2f8b0f9f@story-t-seed.noders.services:26656"\nsed -i -e "/^\\[p2p\\]/,/^\\[/{s/^[[:space:]]*seeds *=.*/seeds = \\"$SEEDS\\"/}" \\\n       -e "/^\\[p2p\\]/,/^\\[/{s/^[[:space:]]*persistent_peers *=.*/persistent_peers = \\"$PEERS\\"/}" $HOME/.story/story/config/config.toml\n\n# set custom ports in story.toml file\nsed -i.bak -e "s%:1317%:${STORY_PORT}317%g;\ns%:8551%:${STORY_PORT}551%g" $HOME/.story/story/config/story.toml\n\n# set custom ports in config.toml file\nsed -i.bak -e "s%:26658%:${STORY_PORT}658%g;\ns%:26657%:${STORY_PORT}657%g;\ns%:26656%:${STORY_PORT}656%g;\ns%^external_address = \\"\\"%external_address = \\"$(wget -qO- eth0.me):${STORY_PORT}656\\"%;\ns%:26660%:${STORY_PORT}660%g" $HOME/.story/story/config/config.toml\n\n# enable prometheus and disable indexing\nsed -i -e "s/prometheus = false/prometheus = true/" $HOME/.story/story/config/config.toml\nsed -i -e "s/^indexer *=.*/indexer = \\"null\\"/" $HOME/.story/story/config/config.toml\n'})}),"\n",(0,s.jsx)(t.h2,{id:"create-service-files",children:"Create service files"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# create geth servie file\nsudo tee /etc/systemd/system/story-geth.service > /dev/null <<EOF\n[Unit]\nDescription=Story Geth daemon\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$HOME/go/bin/geth --devnet-1 --syncmode full --http --http.api eth,net,web3,engine --http.vhosts '*' --http.addr 0.0.0.0 --http.port ${STORY_PORT}545 --authrpc.port ${STORY_PORT}551 --ws --ws.api eth,web3,net,txpool --ws.addr 0.0.0.0 --ws.port ${STORY_PORT}546\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# create story service file\nsudo tee /etc/systemd/system/story.service > /dev/null <<EOF\n[Unit]\nDescription=Story Service\nAfter=network.target\n\n[Service]\nUser=$USER\nWorkingDirectory=$HOME/.story/story\nExecStart=$(which story) run\n\nRestart=on-failure\nRestartSec=5\nLimitNOFILE=65535\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,s.jsx)(t.h2,{id:"start-services",children:"Start services"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# enable and start geth, story\nsudo systemctl daemon-reload\nsudo systemctl enable story story-geth\nsudo systemctl restart story-geth && sleep 5 && sudo systemctl restart story\n\n# check logs\njournalctl -u story -u story-geth -f\n"})}),"\n",(0,s.jsx)(t.h2,{id:"cosmovisor-setup",children:"Cosmovisor Setup"}),"\n",(0,s.jsx)(t.p,{children:"Install go, if needed:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'cd $HOME\nVER="1.22.5"\nwget "https://golang.org/dl/go$VER.linux-amd64.tar.gz"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"\nrm "go$VER.linux-amd64.tar.gz"\n[ ! -f ~/.bash_profile ] && touch ~/.bash_profile\necho "export PATH=$PATH:/usr/local/go/bin:~/go/bin" >> ~/.bash_profile\nsource $HOME/.bash_profile\n[ ! -d ~/go/bin ] && mkdir -p ~/go/bin\n'})}),"\n",(0,s.jsx)(t.p,{children:"Install and init Cosmovisor:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@latest\necho "export DAEMON_NAME="story"" >> $HOME/.bash_profile\necho "export DAEMON_HOME="$HOME/.story/story"" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\ncosmovisor init $(which story)\n'})}),"\n",(0,s.jsx)(t.p,{children:"Create a directory and download the current version of story:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"mkdir -p $HOME/.story/story/cosmovisor/upgrades/v1.2.0/bin\nwget -O $HOME/.story/story/cosmovisor/upgrades/v1.2.0/bin/story https://github.com/piplabs/story/releases/download/v1.2.0/story-linux-amd64\nchmod +x $HOME/.story/story/cosmovisor/upgrades/v1.2.0/bin/story\n"})}),"\n",(0,s.jsx)(t.p,{children:"Update service file:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'sudo tee /etc/systemd/system/story.service > /dev/null << EOF\n[Unit]\nDescription=story node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nEnvironment="DAEMON_NAME=story"\nEnvironment="DAEMON_HOME=$HOME/.story/story"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\nEnvironment="UNSAFE_SKIP_BACKUP=true"\nEnvironment="DAEMON_DATA_BACKUP_DIR=$HOME/.story/story/data"\nExecStart=$(which cosmovisor) run run\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,s.jsx)(t.p,{children:"Enable and start Story using Cosmovisor:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo systemctl daemon-reload\nsudo systemctl enable story\nsudo systemctl restart story && sudo journalctl -u story -f\n"})}),"\n",(0,s.jsx)(t.h2,{id:"create-validator",children:"Create validator"}),"\n",(0,s.jsx)(t.p,{children:"View your validator key"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"story validator export\n"})}),"\n",(0,s.jsx)(t.p,{children:"Export EVM private key"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"story validator export --export-evm-key\n"})}),"\n",(0,s.jsx)(t.p,{children:"View EVM private key and make a key backup"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cat $HOME/.story/story/config/private_key.txt\n"})}),"\n",(0,s.jsx)(t.p,{children:"Use this private key to import your account into a wallet, e.g. Metamask or Phantom. Add the devnet-1 testnet to your wallet via faucet. Then, copy your 'EVM address' from the wallet and request $IP tokens. Now you can see the balance and make transactions in the wallet app."}),"\n",(0,s.jsx)(t.h3,{id:"before-creating-a-validator-wait-for-your-node-to-get-fully-synced-once-catching_up-is-false-move-on-to-the-next-step",children:'Before creating a validator, wait for your node to get fully synced. Once "catching_up" is "false", move on to the next step'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl localhost:$(sed -n '/\\[rpc\\]/,/laddr/ { /laddr/ {s/.*://; s/\".*//; p} }' $HOME/.story/story/config/config.toml)/status | jq\n"})}),"\n",(0,s.jsx)(t.h3,{id:"create-validator-locked",children:"Create validator, locked"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"story validator create --stake 1024000000000000000000 --moniker $MONIKER --chain-id 1315 --unlocked=false\n"})}),"\n",(0,s.jsx)(t.h3,{id:"create-validator-unlocked",children:"Create validator, unlocked"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"story validator create --stake 1024000000000000000000 --moniker $MONIKER --chain-id 1315 --unlocked=true\n"})}),"\n",(0,s.jsx)(t.p,{children:"Remember to backup your validator priv_key from here:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cat $HOME/.story/story/config/priv_validator_key.json\n"})}),"\n",(0,s.jsx)(t.h2,{id:"firewall-rules",children:"Firewall rules"}),"\n",(0,s.jsx)(t.p,{children:"Configure firewall rules:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo ufw allow 30303/tcp comment geth_p2p_port\nsudo ufw allow 26656/tcp comment story_p2p_port\n"})}),"\n",(0,s.jsx)(t.h2,{id:"delete-node",children:"Delete node"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo systemctl stop story story-geth\nsudo systemctl disable story story-geth\nrm -rf $HOME/.story\nsudo rm /etc/systemd/system/story.service /etc/systemd/system/story-geth.service\nsudo systemctl daemon-reload\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},66030:(e,t,n)=>{n.d(t,{A:()=>d});n(96540);var r=n(32673),s=n(81848),i=n(86025),o=n(97555),a=n(237),l=n(74848);const d=function({iconUrl:e,title:t,chainId:n,version:d}){const c=(0,i.Ay)(e);return(0,l.jsxs)(r.A,{display:"flex",flexDirection:"column",gap:2,children:[(0,l.jsxs)(r.A,{display:"flex",alignItems:"center",gap:2,children:[(0,l.jsx)(r.A,{component:"img",src:c,alt:t,width:56,height:56}),(0,l.jsx)(s.A,{variant:"h1",children:t})]}),n&&d&&(0,l.jsxs)(r.A,{display:"flex",flexWrap:"wrap",gap:2,children:[(0,l.jsxs)(r.A,{display:"flex",gap:2,children:[(0,l.jsx)(s.A,{variant:"subtitle2",children:"Chain ID:"}),(0,l.jsx)(o.A,{text:n})]}),(0,l.jsx)(a.A,{orientation:"vertical",flexItem:!0}),(0,l.jsxs)(r.A,{display:"flex",gap:2,children:[(0,l.jsx)(s.A,{variant:"subtitle2",children:"Current Node Version:"}),(0,l.jsx)(o.A,{text:d})]})]})]})}},97555:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var r=n(32673),s=n(81848),i=n(74848);const o=function({text:e}){return(0,i.jsx)(r.A,{display:"flex",paddingY:.5,paddingX:1,borderRadius:2,alignItems:"center",sx:{backgroundColor:"#20222C"},children:(0,i.jsx)(s.A,{variant:"body2",sx:{fontFamily:"Consolas, monospace",fontSize:"15px",fontWeight:400,fontStyle:"normal",lineHeight:"16px"},children:e})})}}}]);