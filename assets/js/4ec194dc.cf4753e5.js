"use strict";(self.webpackChunknoders_services=self.webpackChunknoders_services||[]).push([[1438],{237:(e,n,i)=>{i.d(n,{A:()=>b});var t=i(96540),l=i(34164),a=i(21362),s=i(76955),r=i(26739),o=i(99640),d=i(13202),c=i(96148),p=i(1908);function h(e){return(0,p.Ay)("MuiDivider",e)}(0,c.A)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var g=i(74848);const u=(0,r.Ay)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,n)=>{const{ownerState:i}=e;return[n.root,i.absolute&&n.absolute,n[i.variant],i.light&&n.light,"vertical"===i.orientation&&n.vertical,i.flexItem&&n.flexItem,i.children&&n.withChildren,i.children&&"vertical"===i.orientation&&n.withChildrenVertical,"right"===i.textAlign&&"vertical"!==i.orientation&&n.textAlignRight,"left"===i.textAlign&&"vertical"!==i.orientation&&n.textAlignLeft]}})((0,o.A)((({theme:e})=>({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(e.vars||e).palette.divider,borderBottomWidth:"thin",variants:[{props:{absolute:!0},style:{position:"absolute",bottom:0,left:0,width:"100%"}},{props:{light:!0},style:{borderColor:e.vars?`rgba(${e.vars.palette.dividerChannel} / 0.08)`:(0,s.X4)(e.palette.divider,.08)}},{props:{variant:"inset"},style:{marginLeft:72}},{props:{variant:"middle",orientation:"horizontal"},style:{marginLeft:e.spacing(2),marginRight:e.spacing(2)}},{props:{variant:"middle",orientation:"vertical"},style:{marginTop:e.spacing(1),marginBottom:e.spacing(1)}},{props:{orientation:"vertical"},style:{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"}},{props:{flexItem:!0},style:{alignSelf:"stretch",height:"auto"}},{props:({ownerState:e})=>!!e.children,style:{display:"flex",textAlign:"center",border:0,borderTopStyle:"solid",borderLeftStyle:"solid","&::before, &::after":{content:'""',alignSelf:"center"}}},{props:({ownerState:e})=>e.children&&"vertical"!==e.orientation,style:{"&::before, &::after":{width:"100%",borderTop:`thin solid ${(e.vars||e).palette.divider}`,borderTopStyle:"inherit"}}},{props:({ownerState:e})=>"vertical"===e.orientation&&e.children,style:{flexDirection:"column","&::before, &::after":{height:"100%",borderLeft:`thin solid ${(e.vars||e).palette.divider}`,borderLeftStyle:"inherit"}}},{props:({ownerState:e})=>"right"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"90%"},"&::after":{width:"10%"}}},{props:({ownerState:e})=>"left"===e.textAlign&&"vertical"!==e.orientation,style:{"&::before":{width:"10%"},"&::after":{width:"90%"}}}]})))),v=(0,r.Ay)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,n)=>{const{ownerState:i}=e;return[n.wrapper,"vertical"===i.orientation&&n.wrapperVertical]}})((0,o.A)((({theme:e})=>({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`,whiteSpace:"nowrap",variants:[{props:{orientation:"vertical"},style:{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`}}]})))),m=t.forwardRef((function(e,n){const i=(0,d.b)({props:e,name:"MuiDivider"}),{absolute:t=!1,children:s,className:r,orientation:o="horizontal",component:c=(s||"vertical"===o?"div":"hr"),flexItem:p=!1,light:m=!1,role:b=("hr"!==c?"separator":void 0),textAlign:x="center",variant:j="fullWidth",...f}=i,w={...i,absolute:t,component:c,flexItem:p,light:m,orientation:o,role:b,textAlign:x,variant:j},k=(e=>{const{absolute:n,children:i,classes:t,flexItem:l,light:s,orientation:r,textAlign:o,variant:d}=e,c={root:["root",n&&"absolute",d,s&&"light","vertical"===r&&"vertical",l&&"flexItem",i&&"withChildren",i&&"vertical"===r&&"withChildrenVertical","right"===o&&"vertical"!==r&&"textAlignRight","left"===o&&"vertical"!==r&&"textAlignLeft"],wrapper:["wrapper","vertical"===r&&"wrapperVertical"]};return(0,a.A)(c,h,t)})(w);return(0,g.jsx)(u,{as:c,className:(0,l.A)(k.root,r),role:b,ref:n,ownerState:w,"aria-orientation":"separator"!==b||"hr"===c&&"vertical"!==o?void 0:o,...f,children:s?(0,g.jsx)(v,{className:k.wrapper,ownerState:w,children:s}):null})}));m&&(m.muiSkipListHighlight=!0);const b=m},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var t=i(96540);const l={},a=t.createContext(l);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(a.Provider,{value:n},e.children)}},37130:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"mainnet-networks/celestia/install","title":"Installation Guide","description":"<PageTitle","source":"@site/docs/mainnet-networks/celestia/install.mdx","sourceDirName":"mainnet-networks/celestia","slug":"/mainnet-networks/celestia/install","permalink":"/service/mainnet-networks/celestia/install","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Installation Guide","sidebar_position":2,"hide_title":true,"hide_table_of_contents":false},"sidebar":"mainnetSidebar","previous":{"title":"Celestia","permalink":"/service/mainnet-networks/celestia"},"next":{"title":"Upgrade Guide","permalink":"/service/mainnet-networks/celestia/upgrade"}}');var l=i(74848),a=i(28453),s=i(80093);const r={title:"Installation Guide",sidebar_position:2,hide_title:!0,hide_table_of_contents:!1},o=void 0,d={},c=[{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Install GO",id:"install-go",level:2},{value:"Install with Cosmovisor",id:"install-with-cosmovisor",level:2},{value:"Download and build binaries",id:"download-and-build-binaries",level:3},{value:"Clone Celestia repo and build celestia-appd v3.0.2",id:"clone-celestia-repo-and-build-celestia-appd-v302",level:3},{value:"Build binaries",id:"build-binaries",level:3},{value:"Prepare binaries for Cosmovisor",id:"prepare-binaries-for-cosmovisor",level:3},{value:"Create symlinks",id:"create-symlinks",level:3},{value:"Download and install Cosmovisor",id:"download-and-install-cosmovisor",level:2},{value:"Run node",id:"run-node",level:2},{value:"Create service",id:"create-service",level:3},{value:"Install without Cosmovisor",id:"install-without-cosmovisor",level:2},{value:"Download and build binaries",id:"download-and-build-binaries-1",level:3},{value:"Clone Celestia repo and build celestia-appd v3.0.2",id:"clone-celestia-repo-and-build-celestia-appd-v302-1",level:3},{value:"Build binaries",id:"build-binaries-1",level:3},{value:"Run node",id:"run-node-1",level:2},{value:"Create service",id:"create-service-1",level:3},{value:"Enable service",id:"enable-service",level:3},{value:"Node configuration",id:"node-configuration",level:2},{value:"Set config",id:"set-config",level:3},{value:"Initialize the node",id:"initialize-the-node",level:3},{value:"Download genesis and addrbook",id:"download-genesis-and-addrbook",level:3},{value:"Add peers",id:"add-peers",level:3},{value:"Set minimum gas price",id:"set-minimum-gas-price",level:3},{value:"Set pruning",id:"set-pruning",level:3},{value:"Set custom ports",id:"set-custom-ports",level:3},{value:"Start node and check logs",id:"start-node-and-check-logs",level:3},{value:"Install Bridge Node",id:"install-bridge-node",level:2},{value:"Download and build binaries",id:"download-and-build-binaries-2",level:2},{value:"Add Bridge wallet",id:"add-bridge-wallet",level:2},{value:"Generate new wallet",id:"generate-new-wallet",level:3},{value:"Recover existing wallet",id:"recover-existing-wallet",level:3},{value:"Fund the wallet with testnet tokens",id:"fund-the-wallet-with-testnet-tokens",level:3},{value:"Initialize Bridge node",id:"initialize-bridge-node",level:3},{value:"Create service",id:"create-service-2",level:3},{value:"Start Bridge node",id:"start-bridge-node",level:3},{value:"Check Bridge node logs",id:"check-bridge-node-logs",level:3},{value:"Useful commands",id:"useful-commands",level:2},{value:"Get Bridge Node ID",id:"get-bridge-node-id",level:3},{value:"Get Bridge node key",id:"get-bridge-node-key",level:2},{value:"Check Bridge node wallet balance",id:"check-bridge-node-wallet-balance",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.A,{iconUrl:"img/celestia-icon.svg",title:"Celestia Installation Guide",chainId:"celestia",version:"v3.8.1"}),"\n",(0,l.jsx)(n.h2,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sudo apt -q update\nsudo apt -qy install curl git jq lz4 build-essential\nsudo apt -qy upgrade\n"})}),"\n",(0,l.jsx)(n.h2,{id:"install-go",children:"Install GO"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'ver="1.21.3" &&\nwget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" &&\nsudo rm -rf /usr/local/go &&\nsudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" &&\nrm "go$ver.linux-amd64.tar.gz" &&\necho "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile &&\nsource $HOME/.bash_profile &&\ngo version\n'})}),"\n",(0,l.jsx)(n.h2,{id:"install-with-cosmovisor",children:"Install with Cosmovisor"}),"\n",(0,l.jsx)(n.admonition,{title:"ADVANCED ROUTE",type:"note",children:(0,l.jsx)(n.p,{children:"Cosmosvisor is a process manager for Cosmos SDK application binaries that monitors the governance module for incoming chain upgrade proposals. If a proposal is approved, cosmosvisor can automatically download the new binary, stop the current one, switch to the new binary, and restart the node with the new binary."})}),"\n",(0,l.jsx)(n.h3,{id:"download-and-build-binaries",children:"Download and build binaries"}),"\n",(0,l.jsx)(n.h3,{id:"clone-celestia-repo-and-build-celestia-appd-v302",children:"Clone Celestia repo and build celestia-appd v3.0.2"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"cd $HOME\ngit clone https://github.com/celestiaorg/celestia-app.git\ncd celestia-app\ngit checkout v3.0.2\n"})}),"\n",(0,l.jsx)(n.h3,{id:"build-binaries",children:"Build binaries"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"make install\n"})}),"\n",(0,l.jsx)(n.h3,{id:"prepare-binaries-for-cosmovisor",children:"Prepare binaries for Cosmovisor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"cd $HOME\nmkdir -p ~/.celestia-app/cosmovisor/upgrades/v3.0.2/bin\nmv $HOME/go/bin/celestia-appd ~/.celestia-app/cosmovisor/upgrades/v3.0.2/bin/\n"})}),"\n",(0,l.jsx)(n.h3,{id:"create-symlinks",children:"Create symlinks"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sudo ln -s ~/.celestia-app/cosmovisor/genesis ~/.celestia-app/cosmovisor/current -f\nsudo ln -s ~/.celestia-app/cosmovisor/current/bin/celestia-appd /usr/local/bin/celestia-appd -f\n"})}),"\n",(0,l.jsx)(n.h2,{id:"download-and-install-cosmovisor",children:"Download and install Cosmovisor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@v1.5.0\n"})}),"\n",(0,l.jsx)(n.h2,{id:"run-node",children:"Run node"}),"\n",(0,l.jsx)(n.h3,{id:"create-service",children:"Create service"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'sudo tee /etc/systemd/system/celestia-appd.service > /dev/null << EOF\n[Unit]\nDescription=celestia node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which cosmovisor) run start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\nEnvironment="DAEMON_HOME=~/.celestia-app"\nEnvironment="DAEMON_NAME=celestia-appd"\nEnvironment="UNSAFE_SKIP_BACKUP=true"\nEnvironment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:~/.celestia-app/cosmovisor/current/bin"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,l.jsx)(n.h2,{id:"install-without-cosmovisor",children:"Install without Cosmovisor"}),"\n",(0,l.jsx)(n.h3,{id:"download-and-build-binaries-1",children:"Download and build binaries"}),"\n",(0,l.jsx)(n.h3,{id:"clone-celestia-repo-and-build-celestia-appd-v302-1",children:"Clone Celestia repo and build celestia-appd v3.0.2"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"cd $HOME\ngit clone https://github.com/celestiaorg.git\ncd celestiaorg\ngit checkout v3.0.2\n"})}),"\n",(0,l.jsx)(n.h3,{id:"build-binaries-1",children:"Build binaries"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"make install\n"})}),"\n",(0,l.jsx)(n.h2,{id:"run-node-1",children:"Run node"}),"\n",(0,l.jsx)(n.h3,{id:"create-service-1",children:"Create service"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'sudo tee /etc/systemd/system/celestia-appd.service > /dev/null << EOF\n[Unit]\nDescription=celestia node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which celestia-appd) start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\nEnvironment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,l.jsx)(n.h3,{id:"enable-service",children:"Enable service"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sudo systemctl daemon-reload\nsudo systemctl enable celestia-appd\n"})}),"\n",(0,l.jsx)(n.h2,{id:"node-configuration",children:"Node configuration"}),"\n",(0,l.jsx)(n.h3,{id:"set-config",children:"Set config"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"celestia-appd config chain-id celestia\ncelestia-appd config keyring-backend os\ncelestia-appd config node tcp://localhost:26657\n"})}),"\n",(0,l.jsx)(n.h3,{id:"initialize-the-node",children:"Initialize the node"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"celestia-appd init NAME_OF_YOUR_VALIDATOR --chain-id celestia\n"})}),"\n",(0,l.jsx)(n.h3,{id:"download-genesis-and-addrbook",children:"Download genesis and addrbook"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"curl https://config.noders.services/celestia/genesis.json -o ~/.celestia-app/config/genesis.json\ncurl https://config.noders.services/celestia/addrbook.json -o ~/.celestia-app/config/addrbook.json\n"})}),"\n",(0,l.jsx)(n.h3,{id:"add-peers",children:"Add peers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \\"27f6bac8492b1597146b6c4aeddc4d328fa8ac28@celestia-rpc.noders.services:11656\\"/" ~/.celestia-app/config/config.toml\n'})}),"\n",(0,l.jsx)(n.h3,{id:"set-minimum-gas-price",children:"Set minimum gas price"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'sed -i -e "s|^minimum-gas-prices *=.*|minimum-gas-prices = \\"0.001utia\\"|" ~/.celestia-app/config/app.toml\n'})}),"\n",(0,l.jsx)(n.h3,{id:"set-pruning",children:"Set pruning"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sed -i \\\n  -e 's|^pruning *=.*|pruning = \"custom\"|' \\\n  -e 's|^pruning-keep-recent *=.*|pruning-keep-recent = \"100\"|' \\\n  -e 's|^pruning-keep-every *=.*|pruning-keep-every = \"0\"|' \\\n  -e 's|^pruning-interval *=.*|pruning-interval = \"19\"|' \\\n  ~/.celestia-app/config/app.toml\n"})}),"\n",(0,l.jsx)(n.h3,{id:"set-custom-ports",children:"Set custom ports"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'echo "export celestia-appd_PORT="SET_YOUR_PORT"" >> $HOME/.bash_profile\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'# Set custom ports in app.toml\nsed -i.bak -e "s%:1317%:${celestia-appd_PORT}317%g" \\\n-e "s%:8080%:${celestia-appd_PORT}080%g" \\\n-e "s%:9090%:${celestia-appd_PORT}090%g" \\\n-e "s%:9091%:${celestia-appd_PORT}091%g" \\\n-e "s%:8545%:${celestia-appd_PORT}545%g" \\\n-e "s%:8546%:${celestia-appd_PORT}546%g" \\\n-e "s%:6065%:${celestia-appd_PORT}065%g" ~/.celestia-app/config/app.toml\n\n# Set custom ports in config.toml file\nsed -i.bak -e "s%:26658%:${celestia-appd_PORT}658%g" \\\n-e "s%:26657%:${celestia-appd_PORT}657%g" \\\n-e "s%:6060%:${celestia-appd_PORT}060%g" \\\n-e "s%:26656%:${celestia-appd_PORT}656%g" \\\n-e "s%:26660%:${celestia-appd_PORT}660%g" ~/.celestia-app/config/config.toml\n'})}),"\n",(0,l.jsx)(n.h3,{id:"start-node-and-check-logs",children:"Start node and check logs"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sudo systemctl start celestia-appd && sudo journalctl -u celestia-appd -f --no-hostname -o cat\n"})}),"\n",(0,l.jsx)(n.h2,{id:"install-bridge-node",children:"Install Bridge Node"}),"\n",(0,l.jsxs)(n.h1,{id:"official-documentation-httpsdocscelestiaorgnodesbridge-node",children:["Official documentation: ",(0,l.jsx)(n.code,{children:"https://docs.celestia.org/nodes/bridge-node"})]}),"\n",(0,l.jsx)(n.h2,{id:"download-and-build-binaries-2",children:"Download and build binaries"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node\ngit checkout v0.20.4\nmake build\nsudo mv build/celestia /usr/local/bin\nmake cel-key\nsudo mv cel-key /usr/local/bin\n"})}),"\n",(0,l.jsx)(n.h2,{id:"add-bridge-wallet",children:"Add Bridge wallet"}),"\n",(0,l.jsx)(n.h3,{id:"generate-new-wallet",children:"Generate new wallet"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"cel-key add bridge-wallet --node.type bridge --p2p.network celestia\n"})}),"\n",(0,l.jsx)(n.h3,{id:"recover-existing-wallet",children:"Recover existing wallet"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"cel-key add bridge-wallet --node.type bridge --p2p.network celestia --recover\n"})}),"\n",(0,l.jsx)(n.h3,{id:"fund-the-wallet-with-testnet-tokens",children:"Fund the wallet with testnet tokens"}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsx)(n.p,{children:"Once you start the Bridge Node, a wallet key will be generated for you. You will need to fund that address with Testnet tokens to pay for PayForBlob transactions"})}),"\n",(0,l.jsx)(n.h3,{id:"initialize-bridge-node",children:"Initialize Bridge node"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"celestia bridge init \\\n  --keyring.accname bridge-wallet \\\n  --core.ip <PUBLIC OR YOUR NODE IP> \\\n  --core.rpc.port <PORT> \\\n  --core.grpc.port <PORT> \\\n  --p2p.network celestia \\\n  --rpc.port <PORT> \\\n  --gateway.port <PORT>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"create-service-2",children:"Create service"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sudo tee /etc/systemd/system/celestia-bridge.service > /dev/null << EOF\n[Unit]\nDescription=Celestia Bridge Node service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which celestia) bridge start \\\n--keyring.accname bridge-wallet \\\n--core.ip <PUBLIC OR YOUR NODE IP> \\\n--core.rpc.port <PORT> \\\n--core.grpc.port <PORT> \\\n--p2p.network celestia \\\n--rpc.port <PORT> \\\n--gateway.port <PORT> \\\n--metrics.tls=true \\\n--metrics \\\n--metrics.endpoint otel.celestia.observer\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl daemon-reload\nsudo systemctl enable celestia-bridge.service\n"})}),"\n",(0,l.jsx)(n.h3,{id:"start-bridge-node",children:"Start Bridge node"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sudo systemctl restart celestia-bridge.service\n"})}),"\n",(0,l.jsx)(n.h3,{id:"check-bridge-node-logs",children:"Check Bridge node logs"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"sudo journalctl -fu celestia-bridge.service -o cat\n"})}),"\n",(0,l.jsx)(n.h2,{id:"useful-commands",children:"Useful commands"}),"\n",(0,l.jsx)(n.h3,{id:"get-bridge-node-id",children:"Get Bridge Node ID"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'AUTH_TOKEN=$(celestia bridge auth admin --p2p.network celestia)\ncurl -s -X POST -H "Authorization: Bearer $AUTH_TOKEN" -H \'Content-Type: application/json\' -d \'{"jsonrpc":"2.0","id":0,"method":"p2p.Info","params":[]}\' http://localhost:<PORT> | jq -r .result.ID\n'})}),"\n",(0,l.jsx)(n.h2,{id:"get-bridge-node-key",children:"Get Bridge node key"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"cel-key show bridge-wallet --node.type bridge --p2p.network celestia -a | tail -1\n"})}),"\n",(0,l.jsx)(n.h2,{id:"check-bridge-node-wallet-balance",children:"Check Bridge node wallet balance"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"celestia-appd q bank balances $(cel-key show bridge-wallet --node.type bridge --p2p.network celestia -a | tail -1)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},48010:(e,n,i)=>{i.d(n,{A:()=>s});i(96540);var t=i(32673),l=i(81848),a=i(74848);const s=function(e){let{text:n}=e;return(0,a.jsx)(t.A,{display:"flex",paddingY:.5,paddingX:1,borderRadius:2,alignItems:"center",sx:{backgroundColor:"#20222C"},children:(0,a.jsx)(l.A,{variant:"body2",sx:{fontFamily:"Consolas, monospace",fontSize:"15px",fontWeight:400,fontStyle:"normal",lineHeight:"16px"},children:n})})}},80093:(e,n,i)=>{i.d(n,{A:()=>d});i(96540);var t=i(32673),l=i(81848),a=i(29030),s=i(48010),r=i(237),o=i(74848);const d=function(e){let{iconUrl:n,title:i,chainId:d,version:c}=e;const p=(0,a.Ay)(n);return(0,o.jsxs)(t.A,{display:"flex",flexDirection:"column",gap:2,children:[(0,o.jsxs)(t.A,{display:"flex",alignItems:"center",gap:2,children:[(0,o.jsx)(t.A,{component:"img",src:p,alt:i,width:56,height:56}),(0,o.jsx)(l.A,{variant:"h3",sx:{fontWeight:800},children:i})]}),d&&c&&(0,o.jsxs)(t.A,{display:"flex",gap:2,children:[(0,o.jsx)(l.A,{variant:"subtitle2",children:"Chain ID:"}),(0,o.jsx)(s.A,{text:d}),(0,o.jsx)(r.A,{orientation:"vertical",flexItem:!0}),(0,o.jsx)(l.A,{variant:"subtitle2",children:"Current Node Version:"}),(0,o.jsx)(s.A,{text:c})]})]})}}}]);